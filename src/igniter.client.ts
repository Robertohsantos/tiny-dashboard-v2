/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access */

/**
 * Generated by @igniter-js/cli
 *
 * WARNING: DO NOT EDIT THIS FILE MANUALLY
 *
 * This file was automatically generated from your Igniter router.
 * Any changes made to this file will be overwritten when the CLI regenerates it.
 *
 * To modify the client API, update your controller files instead.
 *
 * Generated: 2025-08-09T13:00:24.623Z
 * Framework: nextjs
 * Output: src/
 */

import {
  createIgniterClient,
  useIgniterQueryClient,
} from '@igniter-js/core/client'
import { AppRouter } from './igniter.router'
import type { AppRouterType } from './igniter.router'

/**
 * Type-safe API client generated from your Igniter router
 *
 * Usage in Server Components:
 * const users = await api.users.list.query()
 *
 * Usage in Client Components:
 * const { data } = api.users.list.useQuery()
 */
export const api = createIgniterClient<AppRouterType>({
  baseURL: process.env.NEXT_PUBLIC_IGNITER_APP_URL || 'http://localhost:3000',
  basePATH: process.env.NEXT_PUBLIC_IGNITER_APP_BASE_PATH || '/api/v1',
  router: () => {
    if (typeof window === 'undefined') {
      // eslint-disable-next-line @typescript-eslint/no-var-requires
      const routerModule = require('./igniter.router') as {
        AppRouter?: AppRouterType
        default?: { AppRouter?: AppRouterType } | AppRouterType | null
      }

      let resolvedRouter = routerModule.AppRouter

      if (!resolvedRouter && routerModule.default) {
        if (
          typeof routerModule.default === 'object' &&
          routerModule.default !== null &&
          'AppRouter' in routerModule.default
        ) {
          resolvedRouter = (routerModule.default as { AppRouter?: AppRouterType }).AppRouter
        } else if (
          typeof routerModule.default === 'object' &&
          routerModule.default !== null &&
          'controllers' in routerModule.default
        ) {
          resolvedRouter = routerModule.default as AppRouterType
        } else {
          resolvedRouter = routerModule.default as AppRouterType
        }
      }

      return resolvedRouter ?? AppRouter
    }

    return AppRouter
  },
})

/**
 * Type-safe API client generated from your Igniter router
 *
 * Usage in Server Components:
 * const users = await api.users.list.query()
 *
 * Usage in Client Components:
 * const { data } = api.users.list.useQuery()
 */
export type ApiClient = typeof api

/**
 * Type-safe query client generated from your Igniter router
 *
 * Usage in Client Components:
 * const { invalidate } = useQueryClient()
 */
export const useQueryClient = useIgniterQueryClient<AppRouterType>

