
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ApiKeyScalarFieldEnum = {
  id: 'id',
  description: 'description',
  key: 'key',
  enabled: 'enabled',
  neverExpires: 'neverExpires',
  expiresAt: 'expiresAt',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WebhookScalarFieldEnum = {
  id: 'id',
  url: 'url',
  secret: 'secret',
  events: 'events',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  userId: 'userId',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  teamId: 'teamId'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  metadata: 'metadata',
  twoFactorEnabled: 'twoFactorEnabled'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId',
  activeOrganizationId: 'activeOrganizationId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  logo: 'logo',
  createdAt: 'createdAt',
  metadata: 'metadata'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  email: 'email',
  role: 'role',
  status: 'status',
  expiresAt: 'expiresAt',
  inviterId: 'inviterId',
  memberId: 'memberId',
  teamId: 'teamId'
};

exports.Prisma.IntegrationScalarFieldEnum = {
  id: 'id',
  provider: 'provider',
  enabled: 'enabled',
  metadata: 'metadata',
  organizationId: 'organizationId',
  webhookId: 'webhookId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TwoFactorScalarFieldEnum = {
  id: 'id',
  secret: 'secret',
  backupCodes: 'backupCodes',
  userId: 'userId'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  name: 'name',
  email: 'email',
  metadata: 'metadata',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlanScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  slug: 'slug',
  name: 'name',
  description: 'description',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  archived: 'archived'
};

exports.Prisma.PriceScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  slug: 'slug',
  amount: 'amount',
  currency: 'currency',
  interval: 'interval',
  intervalCount: 'intervalCount',
  metadata: 'metadata',
  planId: 'planId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  providerId: 'providerId',
  quantity: 'quantity',
  trialDays: 'trialDays',
  metadata: 'metadata',
  billingCycleAnchor: 'billingCycleAnchor',
  prorationBehavior: 'prorationBehavior',
  status: 'status',
  customerId: 'customerId',
  priceId: 'priceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LeadScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  phone: 'phone',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  organizationId: 'organizationId'
};

exports.Prisma.SubmissionScalarFieldEnum = {
  id: 'id',
  metadata: 'metadata',
  leadId: 'leadId',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  data: 'data',
  readAt: 'readAt',
  action: 'action',
  recipientId: 'recipientId',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SaleScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  itemCount: 'itemCount',
  orderNumber: 'orderNumber',
  status: 'status',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SaleMetricScalarFieldEnum = {
  id: 'id',
  date: 'date',
  totalSales: 'totalSales',
  itemsSold: 'itemsSold',
  orders: 'orders',
  averageTicket: 'averageTicket',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FinancialMetricScalarFieldEnum = {
  id: 'id',
  date: 'date',
  salesWithoutShipping: 'salesWithoutShipping',
  costOfGoods: 'costOfGoods',
  taxes: 'taxes',
  marketplaceFees: 'marketplaceFees',
  grossProfit: 'grossProfit',
  shippingDifference: 'shippingDifference',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VisitorDataScalarFieldEnum = {
  id: 'id',
  date: 'date',
  desktop: 'desktop',
  mobile: 'mobile',
  tablet: 'tablet',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  name: 'name',
  description: 'description',
  brand: 'brand',
  category: 'category',
  warehouse: 'warehouse',
  supplier: 'supplier',
  costPrice: 'costPrice',
  sellPrice: 'sellPrice',
  currentStock: 'currentStock',
  minimumStock: 'minimumStock',
  maximumStock: 'maximumStock',
  leadTimeDays: 'leadTimeDays',
  status: 'status',
  organizationId: 'organizationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SalesHistoryScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  date: 'date',
  unitsSold: 'unitsSold',
  price: 'price',
  revenue: 'revenue',
  promotionFlag: 'promotionFlag',
  promotionType: 'promotionType',
  discountPercent: 'discountPercent',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StockAvailabilityScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  date: 'date',
  minutesInStock: 'minutesInStock',
  stockoutEvents: 'stockoutEvents',
  averageStock: 'averageStock',
  openingStock: 'openingStock',
  closingStock: 'closingStock',
  restockQuantity: 'restockQuantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StockCoverageScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  calculatedAt: 'calculatedAt',
  coverageDays: 'coverageDays',
  coverageDaysP90: 'coverageDaysP90',
  coverageDaysP10: 'coverageDaysP10',
  demandForecast: 'demandForecast',
  demandStdDev: 'demandStdDev',
  trendFactor: 'trendFactor',
  seasonalityIndex: 'seasonalityIndex',
  adjustedDemand: 'adjustedDemand',
  confidence: 'confidence',
  historicalDays: 'historicalDays',
  algorithm: 'algorithm',
  parameters: 'parameters',
  reorderPoint: 'reorderPoint',
  reorderQuantity: 'reorderQuantity',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ProrationBehavior = exports.$Enums.ProrationBehavior = {
  create_prorations: 'create_prorations',
  none: 'none'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  incomplete: 'incomplete',
  incomplete_expired: 'incomplete_expired',
  trialing: 'trialing',
  active: 'active',
  past_due: 'past_due',
  canceled: 'canceled',
  unpaid: 'unpaid'
};

exports.ProductStatus = exports.$Enums.ProductStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  DISCONTINUED: 'DISCONTINUED'
};

exports.Prisma.ModelName = {
  ApiKey: 'ApiKey',
  Webhook: 'Webhook',
  Member: 'Member',
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Organization: 'Organization',
  Invitation: 'Invitation',
  Integration: 'Integration',
  TwoFactor: 'TwoFactor',
  Customer: 'Customer',
  Plan: 'Plan',
  Price: 'Price',
  Subscription: 'Subscription',
  Lead: 'Lead',
  Submission: 'Submission',
  Notification: 'Notification',
  Sale: 'Sale',
  SaleMetric: 'SaleMetric',
  FinancialMetric: 'FinancialMetric',
  VisitorData: 'VisitorData',
  Product: 'Product',
  SalesHistory: 'SalesHistory',
  StockAvailability: 'StockAvailability',
  StockCoverage: 'StockCoverage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/roberto/tiny-dashboard/src/generated/prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/roberto/tiny-dashboard/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel ApiKey {\n  id             String       @id @default(uuid())\n  description    String\n  key            String       @unique\n  enabled        Boolean      @default(true)\n  neverExpires   Boolean      @default(false)\n  expiresAt      DateTime?\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  @@unique([organizationId, key])\n  @@map(\"api_key\")\n}\n\nmodel Webhook {\n  id     String   @id @default(uuid())\n  url    String\n  secret String\n  events String[]\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n  Integration Integration[]\n\n  @@map(\"webhook\")\n}\n\nmodel Member {\n  id String @id @default(uuid())\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  role      String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  invitations Invitation[]\n\n  teamId String?\n\n  @@unique([organizationId, userId])\n  @@map(\"memberships\")\n}\n\nmodel User {\n  id            String         @id @default(uuid())\n  name          String\n  email         String\n  emailVerified Boolean\n  image         String?\n  role          String?\n  createdAt     DateTime\n  updatedAt     DateTime\n  sessions      Session[]\n  accounts      Account[]\n  members       Member[]\n  invitations   Invitation[]\n  notifications Notification[]\n  metadata      Json?\n\n  twoFactorEnabled Boolean?\n  twofactors       TwoFactor[]\n\n  @@unique([email])\n  @@map(\"user\")\n}\n\nmodel Session {\n  id                   String   @id @default(uuid())\n  expiresAt            DateTime\n  token                String\n  createdAt            DateTime\n  updatedAt            DateTime\n  ipAddress            String?\n  userAgent            String?\n  userId               String\n  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  activeOrganizationId String?\n\n  @@unique([token])\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id @default(uuid())\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime\n  updatedAt             DateTime\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String    @id @default(uuid())\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime?\n  updatedAt  DateTime?\n\n  @@map(\"verification\")\n}\n\nmodel Organization {\n  id        String   @id @default(uuid())\n  name      String\n  slug      String?\n  logo      String?\n  createdAt DateTime\n  metadata  String?\n\n  members          Member[]\n  invitations      Invitation[]\n  apiKeys          ApiKey[]\n  webhooks         Webhook[]\n  integrations     Integration[]\n  submissions      Submission[]\n  leads            Lead[]\n  notifications    Notification[]\n  products         Product[]\n  sales            Sale[]\n  saleMetrics      SaleMetric[]\n  financialMetrics FinancialMetric[]\n  visitorData      VisitorData[]\n\n  customer Customer?\n\n  @@unique([slug])\n  @@map(\"organization\")\n}\n\nmodel Invitation {\n  id             String       @id @default(uuid())\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  email          String\n  role           String?\n  status         String\n  expiresAt      DateTime\n  inviterId      String\n  user           User         @relation(fields: [inviterId], references: [id], onDelete: Cascade)\n  Member         Member?      @relation(fields: [memberId], references: [id])\n  memberId       String?\n\n  teamId String?\n\n  @@map(\"invitation\")\n}\n\nmodel Integration {\n  id       String  @id @default(uuid())\n  provider String\n  enabled  Boolean @default(true)\n  metadata Json?\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  webhookId String?\n  webhook   Webhook? @relation(fields: [webhookId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([provider, organizationId])\n  @@index([organizationId])\n  @@index([webhookId])\n  @@map(\"integration\")\n}\n\nmodel TwoFactor {\n  id          String @id @default(uuid())\n  secret      String\n  backupCodes String\n  userId      String\n  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"two_factor\")\n}\n\nmodel Customer {\n  id         String  @id @default(uuid())\n  providerId String  @unique\n  name       String\n  email      String?\n  metadata   Json?\n\n  organizationId String       @unique\n  organization   Organization @relation(fields: [organizationId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  subscriptions Subscription[]\n\n  @@map(\"customer\")\n}\n\nmodel Plan {\n  id          String  @id @default(uuid())\n  providerId  String  @unique\n  slug        String  @unique\n  name        String\n  description String?\n  metadata    Json?\n\n  prices Price[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  archived  Boolean  @default(false)\n\n  @@map(\"plan\")\n}\n\nmodel Price {\n  id            String @id @default(uuid())\n  providerId    String @unique\n  slug          String @unique\n  amount        Int\n  currency      String\n  interval      String // 'day' | 'week' | 'month' | 'year'\n  intervalCount Int\n  metadata      Json?\n\n  subscriptions Subscription[]\n\n  planId String\n  plan   Plan   @relation(fields: [planId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"price\")\n}\n\nenum ProrationBehavior {\n  create_prorations\n  none\n}\n\nenum SubscriptionStatus {\n  incomplete\n  incomplete_expired\n  trialing\n  active\n  past_due\n  canceled\n  unpaid\n}\n\nmodel Subscription {\n  id                 String             @id @default(uuid())\n  providerId         String             @unique\n  quantity           Int?\n  trialDays          Int?\n  metadata           Json?\n  billingCycleAnchor DateTime?\n  prorationBehavior  ProrationBehavior?\n  status             SubscriptionStatus\n\n  customerId String\n  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)\n\n  priceId String\n  price   Price  @relation(fields: [priceId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"subscription\")\n}\n\nmodel Lead {\n  id       String  @id @default(uuid())\n  email    String\n  name     String?\n  phone    String?\n  metadata Json?\n\n  submissions Submission[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  @@map(\"lead\")\n}\n\nmodel Submission {\n  id String @id @default(uuid())\n\n  metadata Json?\n\n  leadId String\n  lead   Lead   @relation(fields: [leadId], references: [id], onDelete: Cascade)\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  @@map(\"submissions\")\n}\n\nmodel Notification {\n  id     String    @id @default(uuid())\n  type   String\n  data   Json // JSON payload with dynamic content for the notification\n  readAt DateTime? // Timestamp when the notification was read\n  action Json? // Optional action URL or path\n\n  recipientId String\n  recipient   User   @relation(fields: [recipientId], references: [id], onDelete: Cascade)\n\n  organizationId String?\n  organization   Organization? @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([recipientId])\n  @@index([organizationId])\n  @@index([recipientId, organizationId])\n  @@index([createdAt])\n  @@map(\"notification\")\n}\n\n// Dashboard Sales Models\nmodel Sale {\n  id          String @id @default(uuid())\n  amount      Float\n  itemCount   Int\n  orderNumber String @unique\n  status      String\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([organizationId])\n  @@index([createdAt])\n  @@index([status])\n  @@map(\"sale\")\n}\n\nmodel SaleMetric {\n  id            String   @id @default(uuid())\n  date          DateTime @db.Date\n  totalSales    Float\n  itemsSold     Int\n  orders        Int\n  averageTicket Float\n\n  // TODO: Add marketplace field for filtering by marketplace\n  // marketplaceId String?\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([organizationId, date])\n  @@index([organizationId])\n  @@index([date])\n  @@map(\"sale_metric\")\n}\n\nmodel FinancialMetric {\n  id                   String   @id @default(uuid())\n  date                 DateTime @db.Date\n  salesWithoutShipping Float\n  costOfGoods          Float\n  taxes                Float\n  marketplaceFees      Float\n  grossProfit          Float\n  shippingDifference   Float    @default(0)\n\n  // TODO: Add marketplace field for filtering by marketplace\n  // marketplaceId String?\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([organizationId, date])\n  @@index([organizationId])\n  @@index([date])\n  @@map(\"financial_metric\")\n}\n\nmodel VisitorData {\n  id      String   @id @default(uuid())\n  date    DateTime @db.Date\n  desktop Int      @default(0)\n  mobile  Int      @default(0)\n  tablet  Int      @default(0)\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([organizationId, date])\n  @@index([organizationId])\n  @@index([date])\n  @@map(\"visitor_data\")\n}\n\n// Product Management Models\nenum ProductStatus {\n  ACTIVE\n  INACTIVE\n  DISCONTINUED\n}\n\nmodel Product {\n  id           String        @id @default(uuid())\n  sku          String        @unique\n  name         String\n  description  String?\n  brand        String\n  category     String\n  warehouse    String\n  supplier     String\n  costPrice    Decimal       @db.Decimal(10, 2)\n  sellPrice    Decimal       @db.Decimal(10, 2)\n  currentStock Int           @default(0)\n  minimumStock Int           @default(10)\n  maximumStock Int           @default(1000)\n  leadTimeDays Int           @default(7)\n  status       ProductStatus @default(ACTIVE)\n\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  salesHistory   SalesHistory[]\n  stockHistory   StockAvailability[]\n  stockCoverages StockCoverage[]\n\n  @@index([organizationId])\n  @@index([sku])\n  @@index([status])\n  @@index([warehouse])\n  @@index([supplier])\n  @@map(\"product\")\n}\n\nmodel SalesHistory {\n  id              String   @id @default(uuid())\n  productId       String\n  product         Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  date            DateTime @db.Date\n  unitsSold       Int\n  price           Decimal  @db.Decimal(10, 2)\n  revenue         Decimal  @db.Decimal(10, 2)\n  promotionFlag   Boolean  @default(false)\n  promotionType   String? // BLACK_FRIDAY, CLEARANCE, etc\n  discountPercent Decimal? @db.Decimal(5, 2)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([productId, date])\n  @@index([productId, date])\n  @@index([date])\n  @@map(\"sales_history\")\n}\n\nmodel StockAvailability {\n  id              String   @id @default(uuid())\n  productId       String\n  product         Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  date            DateTime @db.Date\n  minutesInStock  Int      @default(1440) // 0-1440 (minutes in 24h)\n  stockoutEvents  Int      @default(0)\n  averageStock    Float    @default(0)\n  openingStock    Int      @default(0)\n  closingStock    Int      @default(0)\n  restockQuantity Int      @default(0)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([productId, date])\n  @@index([productId, date])\n  @@map(\"stock_availability\")\n}\n\nmodel StockCoverage {\n  id           String   @id @default(uuid())\n  productId    String\n  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n  calculatedAt DateTime @default(now())\n\n  // Coverage calculations\n  coverageDays    Float // P50 coverage\n  coverageDaysP90 Float // P90 coverage (conservative)\n  coverageDaysP10 Float // P10 coverage (optimistic)\n\n  // Demand forecasting\n  demandForecast   Float // Daily demand forecast\n  demandStdDev     Float // Standard deviation\n  trendFactor      Float // Growth/decline factor\n  seasonalityIndex Float // Day-of-week index\n\n  // Adjusted metrics\n  adjustedDemand Float // Demand adjusted for availability\n  confidence     Float // Confidence score (0-1)\n\n  // Calculation metadata\n  historicalDays Int // Days of history used\n  algorithm      String // Algorithm version/type\n  parameters     Json? // Calculation parameters\n\n  // Recommendations\n  reorderPoint    Int? // Suggested reorder point\n  reorderQuantity Int? // Suggested order quantity\n\n  createdAt DateTime @default(now())\n  expiresAt DateTime // Cache expiration\n\n  @@index([productId, calculatedAt])\n  @@index([expiresAt])\n  @@map(\"stock_coverage\")\n}\n",
  "inlineSchemaHash": "f557f5e48affefd5047eb472095164bc2ef6881995b3a283d8f2fc115fe88e36",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"ApiKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"neverExpires\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ApiKeyToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"api_key\"},\"Webhook\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"events\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToWebhook\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Integration\",\"kind\":\"object\",\"type\":\"Integration\",\"relationName\":\"IntegrationToWebhook\"}],\"dbName\":\"webhook\"},\"Member\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MemberToUser\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToMember\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"memberships\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToUser\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"twofactors\",\"kind\":\"object\",\"type\":\"TwoFactor\",\"relationName\":\"TwoFactorToUser\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"activeOrganizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"apiKeys\",\"kind\":\"object\",\"type\":\"ApiKey\",\"relationName\":\"ApiKeyToOrganization\"},{\"name\":\"webhooks\",\"kind\":\"object\",\"type\":\"Webhook\",\"relationName\":\"OrganizationToWebhook\"},{\"name\":\"integrations\",\"kind\":\"object\",\"type\":\"Integration\",\"relationName\":\"IntegrationToOrganization\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"Submission\",\"relationName\":\"OrganizationToSubmission\"},{\"name\":\"leads\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToOrganization\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToOrganization\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrganizationToProduct\"},{\"name\":\"sales\",\"kind\":\"object\",\"type\":\"Sale\",\"relationName\":\"OrganizationToSale\"},{\"name\":\"saleMetrics\",\"kind\":\"object\",\"type\":\"SaleMetric\",\"relationName\":\"OrganizationToSaleMetric\"},{\"name\":\"financialMetrics\",\"kind\":\"object\",\"type\":\"FinancialMetric\",\"relationName\":\"FinancialMetricToOrganization\"},{\"name\":\"visitorData\",\"kind\":\"object\",\"type\":\"VisitorData\",\"relationName\":\"OrganizationToVisitorData\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrganization\"}],\"dbName\":\"organization\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inviterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationToUser\"},{\"name\":\"Member\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"InvitationToMember\"},{\"name\":\"memberId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"invitation\"},\"Integration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"IntegrationToOrganization\"},{\"name\":\"webhookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webhook\",\"kind\":\"object\",\"type\":\"Webhook\",\"relationName\":\"IntegrationToWebhook\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"integration\"},\"TwoFactor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"backupCodes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TwoFactorToUser\"}],\"dbName\":\"two_factor\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CustomerToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"CustomerToSubscription\"}],\"dbName\":\"customer\"},\"Plan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"prices\",\"kind\":\"object\",\"type\":\"Price\",\"relationName\":\"PlanToPrice\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"archived\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":\"plan\"},\"Price\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interval\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"intervalCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PriceToSubscription\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"PlanToPrice\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"price\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"trialDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"billingCycleAnchor\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"prorationBehavior\",\"kind\":\"enum\",\"type\":\"ProrationBehavior\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToSubscription\"},{\"name\":\"priceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"object\",\"type\":\"Price\",\"relationName\":\"PriceToSubscription\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"subscription\"},\"Lead\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"Submission\",\"relationName\":\"LeadToSubmission\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"LeadToOrganization\"}],\"dbName\":\"lead\"},\"Submission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"leadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lead\",\"kind\":\"object\",\"type\":\"Lead\",\"relationName\":\"LeadToSubmission\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSubmission\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"submissions\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"recipientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipient\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"NotificationToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"notification\"},\"Sale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"itemCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSale\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"sale\"},\"SaleMetric\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalSales\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"itemsSold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orders\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averageTicket\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSaleMetric\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"sale_metric\"},\"FinancialMetric\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"salesWithoutShipping\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"costOfGoods\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"taxes\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"marketplaceFees\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"grossProfit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"shippingDifference\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"FinancialMetricToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"financial_metric\"},\"VisitorData\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"desktop\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mobile\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tablet\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToVisitorData\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"visitor_data\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"warehouse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"costPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sellPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currentStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minimumStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maximumStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"leadTimeDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProductStatus\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToProduct\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"salesHistory\",\"kind\":\"object\",\"type\":\"SalesHistory\",\"relationName\":\"ProductToSalesHistory\"},{\"name\":\"stockHistory\",\"kind\":\"object\",\"type\":\"StockAvailability\",\"relationName\":\"ProductToStockAvailability\"},{\"name\":\"stockCoverages\",\"kind\":\"object\",\"type\":\"StockCoverage\",\"relationName\":\"ProductToStockCoverage\"}],\"dbName\":\"product\"},\"SalesHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToSalesHistory\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unitsSold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"revenue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"promotionFlag\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"promotionType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountPercent\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"sales_history\"},\"StockAvailability\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStockAvailability\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"minutesInStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stockoutEvents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averageStock\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"openingStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"closingStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"restockQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"stock_availability\"},\"StockCoverage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStockCoverage\"},{\"name\":\"calculatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"coverageDays\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"coverageDaysP90\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"coverageDaysP10\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"demandForecast\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"demandStdDev\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"trendFactor\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"seasonalityIndex\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"adjustedDemand\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"historicalDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"algorithm\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reorderPoint\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reorderQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"stock_coverage\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

